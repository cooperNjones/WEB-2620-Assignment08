/*! skeleton-framework | 1.1.1 | MIT | 2/25/2017 */
/* Table of contents
- Base Styles
- Grid
- Typography
- Links
- Buttons
- Forms
- Lists
- Code
- Tables
- Spacing
- Utilities
- Clearing
- Media Queries
*/

@import "colors.scss";
@import "grids";
@import "buttons";

html {
  font-size: 1em;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: $white;
  font-size: 1rem;
  line-height: 1.6rem;
  font-weight: 400;
  font-family: "Raleway", "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: $fontColor;
}

.container {
  margin-right: auto;
  margin-left: auto;
  width: 100%;
  max-width: 1200px;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  width: 100%;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.row {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

.row::before,
.row::after {
  content: ' ';
  display: table;
}

.row::after {
  clear: both;
}


/* Base Typo */

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 1rem;
  font-weight: 300;
}

h1,
h2,
h3 {
  margin-top: 2rem;
}

h4,
h5,
h6 {
  margin-top: 1.5rem;
}

$font-sizes: 3.6rem, 3.0rem, 2.4rem, 1.8rem, 1.5rem, 1.2rem;

@each $size in $font-sizes{
  h.nth{
    font-size: $size;
  }
}

$line-size: 1.2, 1.25, 1.3, 1.35, 1.5, 1.5;
$letter-spacing: -0.1rem, -0.1rem, -0.1rem, -0.08rem, -0.05rem, 0rem;

@for $n from 1 through 6{
  h#{$n}{
    line-height: nth($line-size, $n);
    letter-spacing: nth($letter-spacing, $n);
  }
}


/* Larger than phablet */

@media (min-width: 560px) {
  h1 {
    font-size: 3.6rem;
  }
  h2 {
    font-size: 3.0rem;
  }
  h3 {
    font-size: 2.4rem;
  }
  h4 {
    font-size: 1.8rem;
  }
  h5 {
    font-size: 1.5rem;
  }
  h6 {
    font-size: 1.2rem;
  }
}

/* Links */

a {
  color: $aColor1;
}

a:hover {
  color: $aColor2;
}

/* Colors */

.text-primary {
 color: $aColor1
}

.text-success {
  color: $sColor1
}

.text-danger {
  color: $dColor1
}

input[type="email"],
input[type="number"],
input[type="date"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"],
textarea,
select {
  padding: 0.4rem 0.6rem;
  background-color: $white;
  border: 1px solid #D1D1D1;
  border-radius: 4px;
  box-shadow: none;
  -webkit-transition: border 0.2s;
  transition: border 0.2s;
}

input[type="email"],
input[type="number"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"],
select:not([size]),
textarea:not([rows]) {
  height: 2.5rem;
}

/* Removes awkward default styles on some inputs for iOS */

.has-error,
.has-error:focus {
  border: 1px solid $dColor1 !important;
  outline: 0;
}

.has-success,
.has-success:focus {
  border: 1px solid $sColor1 !important;
  outline: 0;
}

label,
legend {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

fieldset {
  padding: 0;
  border-width: 0;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
}

label > .label-body {
  display: inline-block;
  margin-left: 0.5rem;
  font-weight: normal;
}

ul {
  list-style: circle inside;
}

ol {
  list-style: decimal inside;
}

ol,
ul {
  padding-left: 0;
  margin-top: 0;
}

ul ul,
ul ol,
ol ol,
ol ul {
  margin: 1.5rem 0 1.5rem 3rem;
  font-size: 90%;
}

li {
  margin-bottom: 1rem;
}

.list-inline > li {
  display: inline-block;
  padding-right: .2rem;
  padding-left: .2rem;
  margin-bottom: .5rem;
}



/* Positioning */

.u-center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/**
 * Note:
 *
 * Nest this class inside something with `position: relative` to have
 * your element centered relative to its containing element.
 *
 * Use this class without nesting it to have your element centered relative
 * to the viewport.
 */

.u-center-abs {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translateY(-50%) translateX(-50%);
          transform: translateY(-50%) translateX(-50%);
}

/* Type */

.u-text-center {
  text-align: center !important;
}

.u-text-right {
  text-align: right !important;
}

.u-text-left {
  text-align: left !important;
}

.u-text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

/* Peek a boo */

.u-hide {
  display: none !important;
}

.u-show {
  display: block !important;
}

.u-invisible {
  visibility: hidden !important;
}

.u-visible {
  visibility: visible !important;
}

/* Misc */

.u-img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

/* Misc */

hr {
  margin-top: 3rem;
  margin-bottom: 3.5rem;
  border-width: 0;
  border-top: 1px solid $grey2;
}

/* Clearing */

.container:after,
.row:after {
  content: "";
  display: table;
  clear: both;
}

/*****
* Media Queries
*
* Note: The best way to structure the use of media queries is to create the
* queries near the relevant code. For example, if you wanted to change the
* styles for buttons on small devices, paste the mobile query code up in the
* buttons section and style it there.
*****/

@media (min-width: 400px) {
  /* Larger than mobile */
}

@media (min-width: 560px) {
  /* Larger than phablet (also point when grid becomes active) */
}

@media (min-width: 720px) {
  /* Larger than tablet */
}

@media (min-width: 960px) {
  /* Larger than desktop */
}

@media (min-width: 1200px) {
  /* Larger than Desktop HD */
}
